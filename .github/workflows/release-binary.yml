name: Release Binary

on:
  release:
    types: [created, edited]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            goarch: amd64
          - arch: arm64
            goarch: arm64
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'

      - name: Build Binary
        env:
          GOOS: linux
          GOARCH: ${{ matrix.goarch }}
        run: |
          cd collector
          GOBUILD=GO111MODULE=on CGO_ENABLED=0 installsuffix=cgo go build -trimpath -ldflags "-s -w" -o collector
          mkdir extensions collector-config
          mv collector extensions/
          mv config.yaml collector-config/
          zip -r collector-${{ matrix.arch }}.zip extensions collector-config

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./collector/collector-${{ matrix.arch }}.zip
          asset_name: collector-${{ matrix.arch }}.zip
          asset_content_type: application/zip
